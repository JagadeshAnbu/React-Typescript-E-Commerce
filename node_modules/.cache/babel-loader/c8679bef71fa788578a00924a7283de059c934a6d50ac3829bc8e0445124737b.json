{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT PROJECTS\\\\Ciseco\\\\Ciseco\\\\src\\\\containers\\\\PageCheckout\\\\PaymentButton.tsx\";\n// src/components/PayPalButton.tsx\nimport React from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalButton = ({\n  amount,\n  onSuccess\n}) => {\n  const createOrder = (data, actions) => {\n    if (actions && actions.order) {\n      return actions.order.create({\n        intent: 'CAPTURE',\n        purchase_units: [{\n          amount: {\n            currency_code: 'USD',\n            value: amount.toString()\n          }\n        }]\n      });\n    }\n    return Promise.reject(new Error('actions.order is undefined'));\n  };\n  const onApprove = (data, actions) => {\n    if (actions && actions.order) {\n      return actions.order.capture().then(details => {\n        onSuccess(details);\n      }).catch(error => {\n        console.error('Capture error:', error);\n      });\n    }\n    return Promise.reject(new Error('actions.order is undefined'));\n  };\n  const onError = error => {\n    console.error('PayPal Script Error:', error);\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      'client-id': 'YOUR_PAYPAL_CLIENT_ID',\n      currency: 'USD'\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: {\n        layout: 'vertical'\n      },\n      createOrder: createOrder,\n      onApprove: onApprove,\n      onError: onError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = PayPalButton;\nexport default PayPalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","PayPalScriptProvider","PayPalButtons","jsxDEV","_jsxDEV","PayPalButton","amount","onSuccess","createOrder","data","actions","order","create","intent","purchase_units","currency_code","value","toString","Promise","reject","Error","onApprove","capture","then","details","catch","error","console","onError","options","currency","children","style","layout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/REACT PROJECTS/Ciseco/Ciseco/src/containers/PageCheckout/PaymentButton.tsx"],"sourcesContent":["// src/components/PayPalButton.tsx\r\nimport React from 'react';\r\nimport { PayPalScriptProvider, PayPalButtons, PayPalButtonsComponentProps } from '@paypal/react-paypal-js';\r\n\r\ninterface PayPalButtonProps {\r\n  amount: number;\r\n  onSuccess: (details: any) => void;\r\n}\r\n\r\nconst PayPalButton: React.FC<PayPalButtonProps> = ({ amount, onSuccess }) => {\r\n  const createOrder: PayPalButtonsComponentProps['createOrder'] = (data, actions) => {\r\n    if (actions && actions.order) {\r\n      return actions.order.create({\r\n        intent: 'CAPTURE',\r\n        purchase_units: [\r\n          {\r\n            amount: {\r\n              currency_code: 'USD',\r\n              value: amount.toString(),\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    return Promise.reject(new Error('actions.order is undefined'));\r\n  };\r\n\r\n  const onApprove: PayPalButtonsComponentProps['onApprove'] = (data, actions) => {\r\n    if (actions && actions.order) {\r\n      return actions.order.capture().then((details) => {\r\n        onSuccess(details);\r\n      }).catch((error) => {\r\n        console.error('Capture error:', error);\r\n      });\r\n    }\r\n    return Promise.reject(new Error('actions.order is undefined'));\r\n  };\r\n\r\n  const onError = (error: any) => {\r\n    console.error('PayPal Script Error:', error);\r\n  };\r\n\r\n  return (\r\n    <PayPalScriptProvider\r\n      options={{\r\n        'client-id': 'YOUR_PAYPAL_CLIENT_ID',\r\n        currency: 'USD',\r\n      }}\r\n    >\r\n      <PayPalButtons\r\n        style={{ layout: 'vertical' }}\r\n        createOrder={createOrder}\r\n        onApprove={onApprove}\r\n        onError={onError}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default PayPalButton;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,aAAa,QAAqC,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3G,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAC3E,MAAMC,WAAuD,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACjF,IAAIA,OAAO,IAAIA,OAAO,CAACC,KAAK,EAAE;MAC5B,OAAOD,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;QAC1BC,MAAM,EAAE,SAAS;QACjBC,cAAc,EAAE,CACd;UACER,MAAM,EAAE;YACNS,aAAa,EAAE,KAAK;YACpBC,KAAK,EAAEV,MAAM,CAACW,QAAQ,CAAC;UACzB;QACF,CAAC;MAEL,CAAC,CAAC;IACJ;IACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,4BAA4B,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,SAAmD,GAAGA,CAACZ,IAAI,EAAEC,OAAO,KAAK;IAC7E,IAAIA,OAAO,IAAIA,OAAO,CAACC,KAAK,EAAE;MAC5B,OAAOD,OAAO,CAACC,KAAK,CAACW,OAAO,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;QAC/CjB,SAAS,CAACiB,OAAO,CAAC;MACpB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAClBC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC,CAAC,CAAC;IACJ;IACA,OAAOR,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,4BAA4B,CAAC,CAAC;EAChE,CAAC;EAED,MAAMQ,OAAO,GAAIF,KAAU,IAAK;IAC9BC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C,CAAC;EAED,oBACEtB,OAAA,CAACH,oBAAoB;IACnB4B,OAAO,EAAE;MACP,WAAW,EAAE,uBAAuB;MACpCC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,eAEF3B,OAAA,CAACF,aAAa;MACZ8B,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAW,CAAE;MAC9BzB,WAAW,EAAEA,WAAY;MACzBa,SAAS,EAAEA,SAAU;MACrBO,OAAO,EAAEA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE3B,CAAC;AAACC,EAAA,GAhDIjC,YAAyC;AAkD/C,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}