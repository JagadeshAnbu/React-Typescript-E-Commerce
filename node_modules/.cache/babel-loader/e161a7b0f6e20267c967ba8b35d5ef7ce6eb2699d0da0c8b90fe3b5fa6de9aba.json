{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT PROJECTS\\\\Ciseco\\\\Ciseco\\\\src\\\\shared\\\\Badge\\\\Badge.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Badge = ({\n  className = \"relative\",\n  name,\n  color = \"blue\",\n  href\n}) => {\n  const getColorClass = (hasHover = true) => {\n    switch (color) {\n      case \"pink\":\n        return `text-pink-800 bg-pink-100 ${hasHover ? \"hover:bg-pink-800\" : \"\"}`;\n      case \"red\":\n        return `text-red-800 bg-red-100 ${hasHover ? \"hover:bg-red-800\" : \"\"}`;\n      case \"gray\":\n        return `text-gray-800 bg-gray-100 ${hasHover ? \"hover:bg-gray-800\" : \"\"}`;\n      case \"green\":\n        return `text-green-800 bg-green-100 ${hasHover ? \"hover:bg-green-800\" : \"\"}`;\n      case \"purple\":\n        return `text-purple-800 bg-purple-100 ${hasHover ? \"hover:bg-purple-800\" : \"\"}`;\n      case \"indigo\":\n        return `text-indigo-800 bg-indigo-100 ${hasHover ? \"hover:bg-indigo-800\" : \"\"}`;\n      case \"yellow\":\n        return `text-yellow-800 bg-yellow-100 ${hasHover ? \"hover:bg-yellow-800\" : \"\"}`;\n      case \"blue\":\n        return `text-blue-800 bg-blue-100 ${hasHover ? \"hover:bg-blue-800\" : \"\"}`;\n      default:\n        return `text-pink-800 bg-pink-100 ${hasHover ? \"hover:bg-pink-800\" : \"\"}`;\n    }\n  };\n  const CLASSES = \"nc-Badge inline-flex px-2.5 py-1 rounded-full font-medium text-xs \" + className;\n  return !!href ? /*#__PURE__*/_jsxDEV(Link, {\n    to: href || \"\",\n    className: `transition-colors hover:text-white duration-300 ${CLASSES} ${getColorClass()}`,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `${CLASSES} ${getColorClass(false)} ${className}`,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = Badge;\nexport default Badge;\nvar _c;\n$RefreshReg$(_c, \"Badge\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Badge","className","name","color","href","getColorClass","hasHover","CLASSES","to","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/REACT PROJECTS/Ciseco/Ciseco/src/shared/Badge/Badge.tsx"],"sourcesContent":["import { TwMainColor } from \"data/types\";\r\nimport React, { FC, ReactNode } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface BadgeProps {\r\n  className?: string;\r\n  name: ReactNode;\r\n  color?: TwMainColor;\r\n  href?: string;\r\n}\r\n\r\nconst Badge: FC<BadgeProps> = ({\r\n  className = \"relative\",\r\n  name,\r\n  color = \"blue\",\r\n  href,\r\n}) => {\r\n  const getColorClass = (hasHover = true) => {\r\n    switch (color) {\r\n      case \"pink\":\r\n        return `text-pink-800 bg-pink-100 ${\r\n          hasHover ? \"hover:bg-pink-800\" : \"\"\r\n        }`;\r\n      case \"red\":\r\n        return `text-red-800 bg-red-100 ${hasHover ? \"hover:bg-red-800\" : \"\"}`;\r\n      case \"gray\":\r\n        return `text-gray-800 bg-gray-100 ${\r\n          hasHover ? \"hover:bg-gray-800\" : \"\"\r\n        }`;\r\n      case \"green\":\r\n        return `text-green-800 bg-green-100 ${\r\n          hasHover ? \"hover:bg-green-800\" : \"\"\r\n        }`;\r\n      case \"purple\":\r\n        return `text-purple-800 bg-purple-100 ${\r\n          hasHover ? \"hover:bg-purple-800\" : \"\"\r\n        }`;\r\n      case \"indigo\":\r\n        return `text-indigo-800 bg-indigo-100 ${\r\n          hasHover ? \"hover:bg-indigo-800\" : \"\"\r\n        }`;\r\n      case \"yellow\":\r\n        return `text-yellow-800 bg-yellow-100 ${\r\n          hasHover ? \"hover:bg-yellow-800\" : \"\"\r\n        }`;\r\n      case \"blue\":\r\n        return `text-blue-800 bg-blue-100 ${\r\n          hasHover ? \"hover:bg-blue-800\" : \"\"\r\n        }`;\r\n      default:\r\n        return `text-pink-800 bg-pink-100 ${\r\n          hasHover ? \"hover:bg-pink-800\" : \"\"\r\n        }`;\r\n    }\r\n  };\r\n\r\n  const CLASSES =\r\n    \"nc-Badge inline-flex px-2.5 py-1 rounded-full font-medium text-xs \" +\r\n    className;\r\n  return !!href ? (\r\n    <Link\r\n      to={href || \"\"}\r\n      className={`transition-colors hover:text-white duration-300 ${CLASSES} ${getColorClass()}`}\r\n    >\r\n      {name}\r\n    </Link>\r\n  ) : (\r\n    <span className={`${CLASSES} ${getColorClass(false)} ${className}`}>\r\n      {name}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAyB,OAAO;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,MAAMC,KAAqB,GAAGA,CAAC;EAC7BC,SAAS,GAAG,UAAU;EACtBC,IAAI;EACJC,KAAK,GAAG,MAAM;EACdC;AACF,CAAC,KAAK;EACJ,MAAMC,aAAa,GAAGA,CAACC,QAAQ,GAAG,IAAI,KAAK;IACzC,QAAQH,KAAK;MACX,KAAK,MAAM;QACT,OAAQ,6BACNG,QAAQ,GAAG,mBAAmB,GAAG,EAClC,EAAC;MACJ,KAAK,KAAK;QACR,OAAQ,2BAA0BA,QAAQ,GAAG,kBAAkB,GAAG,EAAG,EAAC;MACxE,KAAK,MAAM;QACT,OAAQ,6BACNA,QAAQ,GAAG,mBAAmB,GAAG,EAClC,EAAC;MACJ,KAAK,OAAO;QACV,OAAQ,+BACNA,QAAQ,GAAG,oBAAoB,GAAG,EACnC,EAAC;MACJ,KAAK,QAAQ;QACX,OAAQ,iCACNA,QAAQ,GAAG,qBAAqB,GAAG,EACpC,EAAC;MACJ,KAAK,QAAQ;QACX,OAAQ,iCACNA,QAAQ,GAAG,qBAAqB,GAAG,EACpC,EAAC;MACJ,KAAK,QAAQ;QACX,OAAQ,iCACNA,QAAQ,GAAG,qBAAqB,GAAG,EACpC,EAAC;MACJ,KAAK,MAAM;QACT,OAAQ,6BACNA,QAAQ,GAAG,mBAAmB,GAAG,EAClC,EAAC;MACJ;QACE,OAAQ,6BACNA,QAAQ,GAAG,mBAAmB,GAAG,EAClC,EAAC;IACN;EACF,CAAC;EAED,MAAMC,OAAO,GACX,oEAAoE,GACpEN,SAAS;EACX,OAAO,CAAC,CAACG,IAAI,gBACXL,OAAA,CAACF,IAAI;IACHW,EAAE,EAAEJ,IAAI,IAAI,EAAG;IACfH,SAAS,EAAG,mDAAkDM,OAAQ,IAAGF,aAAa,CAAC,CAAE,EAAE;IAAAI,QAAA,EAE1FP;EAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC,gBAEPd,OAAA;IAAME,SAAS,EAAG,GAAEM,OAAQ,IAAGF,aAAa,CAAC,KAAK,CAAE,IAAGJ,SAAU,EAAE;IAAAQ,QAAA,EAChEP;EAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CACP;AACH,CAAC;AAACC,EAAA,GA5DId,KAAqB;AA8D3B,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}